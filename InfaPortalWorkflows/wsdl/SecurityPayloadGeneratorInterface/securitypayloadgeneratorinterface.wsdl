<!-- WSDL Generated by ActiveVOS Designer : Do Not Edit -->
<wsdl:definitions xmlns:aem="urn:active-endpoints:wsdlGen:metaData" xmlns:cry="urn:javax:crypto" xmlns:scr="urn:security:payload:securitypayloadgeneratorinterface" xmlns:sec="urn:java:security" xmlns:tns="urn:security:payload:securitypayloadgeneratorinterface" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:security:payload:securitypayloadgeneratorinterface">

   <!-- Java2WSDL Meta Data Generated by ActiveVOS Designer -->
   <aem:classes package="security.payload">
      <aem:interface name="SecurityPayloadGeneratorInterface"/>
   </aem:classes>

   <!-- Partner Link Type generated from Java Interface. -->
   <plnk:partnerLinkType xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" name="SecurityPayloadGeneratorInterfacePLT">
      <plnk:role name="java" portType="tns:SecurityPayloadGeneratorInterface"/>
   </plnk:partnerLinkType>

   <!-- Embedded schema types and imported referenced schemas. -->
   <wsdl:types>
      <xs:schema targetNamespace="urn:security:payload:securitypayloadgeneratorinterface">

         <xs:import namespace="urn:java:security" schemaLocation="security.xsd"/>
         <xs:import namespace="urn:javax:crypto" schemaLocation="crypto.xsd"/>

         <xs:element name="getEncryptedSecurityPayloadRest">
            <xs:complexType>
               <xs:sequence>
                  <xs:element form="unqualified" name="arg1_string" type="xs:string"/>
                  <xs:element form="unqualified" name="arg2_string" type="xs:string"/>
                  <xs:element form="unqualified" name="arg3_string" type="xs:string"/>
                  <xs:element form="unqualified" name="arg4_string" type="xs:string"/>
                  <xs:element form="unqualified" name="arg5_string" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="getEncryptedSecurityPayloadRestResponse">
            <xs:complexType>
               <xs:sequence>
                  <xs:element form="unqualified" name="string" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="getEncryptedSecurityPayloadRestFault">
            <xs:complexType>
               <xs:choice>
                  <xs:element ref="sec:invalidKeyException"/>
                  <xs:element ref="sec:noSuchAlgorithmException"/>
                  <xs:element ref="sec:signatureException"/>
                  <xs:element ref="cry:badPaddingException"/>
                  <xs:element ref="cry:illegalBlockSizeException"/>
                  <xs:element ref="cry:noSuchPaddingException"/>
               </xs:choice>
            </xs:complexType>
         </xs:element>
         <xs:element name="getEncryptedSecurityPayload">
            <xs:complexType>
               <xs:sequence>
                  <xs:element form="unqualified" name="arg1_string" type="xs:string"/>
                  <xs:element form="unqualified" name="arg2_string" type="xs:string"/>
                  <xs:element form="unqualified" name="arg3_string" type="xs:string"/>
                  <xs:element form="unqualified" name="arg4_string" type="xs:string"/>
                  <xs:element form="unqualified" name="arg5_string" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="getEncryptedSecurityPayloadResponse">
            <xs:complexType>
               <xs:sequence>
                  <xs:element form="unqualified" name="string" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="getEncryptedSecurityPayloadFault">
            <xs:complexType>
               <xs:choice>
                  <xs:element ref="sec:invalidKeyException"/>
                  <xs:element ref="sec:noSuchAlgorithmException"/>
                  <xs:element ref="sec:signatureException"/>
                  <xs:element ref="cry:badPaddingException"/>
                  <xs:element ref="cry:illegalBlockSizeException"/>
                  <xs:element ref="cry:noSuchPaddingException"/>
               </xs:choice>
            </xs:complexType>
         </xs:element>
      </xs:schema>
   </wsdl:types>

   <!-- WSDL Messages for each method in the Java interface. -->
   <wsdl:message name="getEncryptedSecurityPayloadRest">
      <wsdl:part element="tns:getEncryptedSecurityPayloadRest" name="getEncryptedSecurityPayloadRest"/>
   </wsdl:message>
   <wsdl:message name="getEncryptedSecurityPayloadRestResponse">
      <wsdl:part element="tns:getEncryptedSecurityPayloadRestResponse" name="getEncryptedSecurityPayloadRestResponse"/>
   </wsdl:message>
   <wsdl:message name="getEncryptedSecurityPayloadRestFault">
      <wsdl:part element="tns:getEncryptedSecurityPayloadRestFault" name="getEncryptedSecurityPayloadRestFault"/>
   </wsdl:message>
   <wsdl:message name="getEncryptedSecurityPayload">
      <wsdl:part element="tns:getEncryptedSecurityPayload" name="getEncryptedSecurityPayload"/>
   </wsdl:message>
   <wsdl:message name="getEncryptedSecurityPayloadResponse">
      <wsdl:part element="tns:getEncryptedSecurityPayloadResponse" name="getEncryptedSecurityPayloadResponse"/>
   </wsdl:message>
   <wsdl:message name="getEncryptedSecurityPayloadFault">
      <wsdl:part element="tns:getEncryptedSecurityPayloadFault" name="getEncryptedSecurityPayloadFault"/>
   </wsdl:message>

   <!-- Generated port type for Java Interface: -->
   <!--   security.payload.SecurityPayloadGeneratorInterface -->
   <wsdl:portType name="SecurityPayloadGeneratorInterface">
      <wsdl:operation name="getEncryptedSecurityPayloadRest">
         <wsdl:input message="tns:getEncryptedSecurityPayloadRest"/>
         <wsdl:output message="tns:getEncryptedSecurityPayloadRestResponse"/>
         <wsdl:fault message="tns:getEncryptedSecurityPayloadRestFault" name="invalidKeyException"/>
         <wsdl:fault message="tns:getEncryptedSecurityPayloadRestFault" name="noSuchAlgorithmException"/>
         <wsdl:fault message="tns:getEncryptedSecurityPayloadRestFault" name="signatureException"/>
         <wsdl:fault message="tns:getEncryptedSecurityPayloadRestFault" name="badPaddingException"/>
         <wsdl:fault message="tns:getEncryptedSecurityPayloadRestFault" name="illegalBlockSizeException"/>
         <wsdl:fault message="tns:getEncryptedSecurityPayloadRestFault" name="noSuchPaddingException"/>
      </wsdl:operation>
      <wsdl:operation name="getEncryptedSecurityPayload">
         <wsdl:input message="tns:getEncryptedSecurityPayload"/>
         <wsdl:output message="tns:getEncryptedSecurityPayloadResponse"/>
         <wsdl:fault message="tns:getEncryptedSecurityPayloadFault" name="invalidKeyException"/>
         <wsdl:fault message="tns:getEncryptedSecurityPayloadFault" name="noSuchAlgorithmException"/>
         <wsdl:fault message="tns:getEncryptedSecurityPayloadFault" name="signatureException"/>
         <wsdl:fault message="tns:getEncryptedSecurityPayloadFault" name="badPaddingException"/>
         <wsdl:fault message="tns:getEncryptedSecurityPayloadFault" name="illegalBlockSizeException"/>
         <wsdl:fault message="tns:getEncryptedSecurityPayloadFault" name="noSuchPaddingException"/>
      </wsdl:operation>
   </wsdl:portType>
</wsdl:definitions>
