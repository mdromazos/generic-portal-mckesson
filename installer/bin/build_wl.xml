<project name="TSRInstallation" default="usage" basedir=".">
    <description>Portal Installation</description>

	<property environment="env"/>
	<property name="supported.hub.version" value="^10\.4\.*.*$" />
    <property file="${env.HUB_HOME}\server\bin\build.properties" prefix="hubprop"/>
    <property file="${env.HUB_HOME}\server\resources\cmxserver.properties" prefix="hubprop"/>
    <property name="portal.home" value="${env.PORTAL_HOME}"/>
    <property name="sip.home" value="${env.SIP_HOME}"/>
	<property name="email.config.dir" value="${sip.home}/resources/mdmapps/email-config"/>
	<property name="email.templates.dir" value="${sip.home}/resources/mdmapps/email-config/templates/avos-templates"/>
    <property name="weblogic.version" value="${env.WLS_VERSION}"/>
	<property name="email.path" value="${portal.home}/email-config"/>
	<property name="email.xsl.path" value="${email.path}/templates/avos-templates"/>
	<property name="withPim" value="${env.choice}"/>
   
	<property name="bpr_email.name" value="SolutionsEmailService.bpr"/>
	<property name="bpr_email.path" value="${portal.home}/bpm/${bpr_email.name}"/>
	<property name="bpr_generic_portal.name" value="InfaPortalWorkflows.bpr"/>
	<property name="bpr_generic_portal.path" value="${portal.home}/bpm/${bpr_generic_portal.name}"/>
	
	<property name="bpr.wsdl" value="wsdl/testwork1/prod_depot/solutions/Supplier Hub/main/projects/ActiveVos Workflow/v10/SolutionsEmailService"/>
	<property name="bpr_generic_portal.wsdl" value="wsdl/InfaPortalWorkflows"/>
	
	<property name="workflow.config.path" value="${portal.home}/bpm"/>
	<property name="bpr_email.tmpdir" location="${basedir}/../tmp/_build/${bpr_email.name}"/>	

    <property name="cookie-secure" value="false"/>
    <property name="avos_ear_lib_dir" value="APP-INF/lib"/>
	<property name="genericportal.ear.name" value="generic-portal.ear"/>
	<property name="genericportal.ear.path" value="${portal.home}/${genericportal.ear.name}"/>
    <property name="pimservice.war.name" value="pimservice.war"/>
	<property name="pimservice.war.path" value="${portal.home}/${pimservice.war.name}"/>
	
	<tstamp>
        <format property="start" pattern="yyyy MMMM dd HH:mm:ss" locale="en"/>
    </tstamp>
	
	<available file="${sip.home}/lib/ant-contrib-1.0b3.jar" property="ant.contrib.present"/>
	<taskdef resource="net/sf/antcontrib/antlib.xml">
	  <classpath>
		<pathelement location="${sip.home}/lib/ant-contrib-1.0b3.jar"/>
	  </classpath>
	</taskdef>
	
	<path id="build.wls.classpath">
        <fileset dir="${sip.home}/lib/">
            <include name="build.jar"/>
            <include name="build-db.jar"/>
            <include name="build-wls.jar"/>
        </fileset>
    </path>

    <taskdef resource="build.taskdef.properties" classpathref="build.wls.classpath"/>
    <taskdef resource="build-db.taskdef.properties" classpathref="build.wls.classpath"/>
    <taskdef resource="build-wls.taskdef.properties" classpathref="build.wls.classpath"/>
	
	<condition property="avos_installed">
        <and>
            <isset property="hubprop.activevos.install.dir"/>
            <not>
                <equals arg1="${hubprop.activevos.install.dir}" arg2=""/>
            </not>
            <available file="${hubprop.activevos.install.dir}"/>
            <not>
                <isset property="hubprop.skip.avos"/>
            </not>
        </and>
    </condition>

	<condition property="avos_to_be_deployed">
		<and>
			<isTrue value="${avos_installed}"/>
			<isTrue value="${ant.contrib.present}"/>
		</and>
	</condition>

	 <target name="get.weblogic.password" unless="env.wl_password">
        <!-- propertyprompt propertyname="weblogic.password" prompttext="Enter weblogic user (${weblogic.username})'s password" / -->
        <fail>Weblogic administrative password not provided</fail>
    </target>


  
    <target name="generic_portal_pki" description="Run the jar file" >
        <java classname="com.infomatica.mdm.portal.util.PortalKeyStore"  failonerror="true">
          <arg value="${env.HUB_HOME}/server"/>
           <classpath>
                <pathelement location="${portal.home}/portal-util.jar"/>
                <fileset dir="${hubprop.sip.home}/lib/pkiutils">
                    <include name="**/*.jar" />
                </fileset>
                <fileset dir="${hubprop.sip.home}/lib/hashing">
                    <include name="**/*.jar" />
                </fileset>
                <fileset dir="${hubprop.sip.home}/lib">
                    <include name="**/*.jar" />
                </fileset>
                
            </classpath>
       </java>
    </target>
  

   <target name="incl_sql_jar_infa_home">
        <echo message="Include either of ojdbc, sqljdbc, db2jdbc."/>
         <unzip src="${portal.home}/generic-portal.ear" dest="${portal.home}/generic-portal-tmp">
        </unzip>
        <zip destfile="${portal.home}/generic-portal-tmp/com.informatica.mdm.portal-portal-metadata-rest-0.0.1-SNAPSHOT.war"  update="true">
            
            <zipfileset dir="${env.HUB_HOME}/server/lib/" includes="ojdbc*.jar"
                        prefix="WEB-INF/lib/"/>
            <zipfileset dir="${env.HUB_HOME}/server/lib" includes="db2jcc*.jar"
                        prefix="WEB-INF/lib/"/>
            <zipfileset dir="${env.HUB_HOME}/server/lib" includes="sqljdbc*.jar"
                        prefix="WEB-INF/lib/"/>
            <zipfileset dir="${env.HUB_HOME}/server/lib" includes="log4j*.jar"
                        prefix="WEB-INF/lib/"/>
              <zipfileset dir="${env.HUB_HOME}/server/lib" includes="mssql-jdbc*.jar"
                        prefix="WEB-INF/lib/"/>

        </zip>
        <delete file="${portal.home}/generic-portal.ear" />
        <zip destfile="${portal.home}/generic-portal.ear" basedir="${portal.home}/generic-portal-tmp/" includes="**/*" />
        
    </target>

     <target name="incl_img_in_war">
        <echo message="Include img in war."/>
         <unzip src="${portal.home}/generic-portal.ear" dest="${portal.home}/generic-portal-tmp">
        </unzip>
        <zip destfile="${portal.home}/generic-portal-tmp/mdm.ui-portal-ui-0.0.1-SNAPSHOT.war"  update="true">
            
            <zipfileset dir="${portal.home}/images/" includes="*.*"
                        prefix="images/"/>
           

        </zip>
        <delete file="${portal.home}/generic-portal.ear" />
        <zip destfile="${portal.home}/generic-portal.ear" basedir="${portal.home}/generic-portal-tmp/" includes="**/*" />
        
    </target>

   <target name="redeploy"  depends="get.weblogic.password, undeployPortal"
      description="Prepare it to deploy in the application server">
        <echo message="Deploying ${genericportal.ear.path}."/>
        <basename property="appnamegenericportal" file="${portal.home}/${genericportal.ear.name}"
          suffix=".ear"/>
    <install-app app-name="${appnamegenericportal}" file-name="${genericportal.ear.name}"/>
    </target>

    <target name="redeployWithPIM"  depends="get.weblogic.password, undeployPortalWithPIM, deploy_pimservice"
      description="Prepare it to deploy in the application server">
        <echo message="Deploying ${genericportal.ear.path}."/>
        <basename property="appnamegenericportal" file="${portal.home}/${genericportal.ear.name}"
          suffix=".ear"/>
    <install-app app-name="${appnamegenericportal}" file-name="${genericportal.ear.name}"/>
    </target>

	<target name="deploy_portal" description="Prepare it to deploy in the application server">
		 <echo message="Deploying ${genericportal.ear.path}."/>
        <basename property="appnamegenericportal" file="${portal.home}/${genericportal.ear.name}"
          suffix=".ear"/>
    <install-app app-name="${appnamegenericportal}" file-name="${genericportal.ear.name}"/>
	</target>
	
	 <target name="deploy_generic_portal_ear_PIM"  depends="incl_sql_jar_infa_home, incl_img_in_war, get.weblogic.password, undeployPortalWithPIM, generic_portal_pki, deploy_portal,deploy_pimservice, deploy_bpm"
    	description="Prepare it to deploy in the application server">
        <echo message="Deploying ${genericportal.ear.path}."/>
        <basename property="appnamegenericportal" file="${portal.home}/${genericportal.ear.name}"
          suffix=".ear"/>
		<install-app app-name="${appnamegenericportal}" file-name="${genericportal.ear.name}"/>
    </target>

	<target name="deploy_generic_portal_ear"  depends="incl_sql_jar_infa_home, incl_img_in_war, get.weblogic.password, undeployPortal, generic_portal_pki,deploy_portal,deploy_bpm"
    	description="Prepare it to deploy in the application server">
        <echo message="Deploying ${genericportal.ear.path}."/>
        <basename property="appnamegenericportal" file="${portal.home}/${genericportal.ear.name}"
          suffix=".ear"/>
		<install-app app-name="${appnamegenericportal}" file-name="${genericportal.ear.name}"/>
    </target>

    <target name="deploy_pimservice"  depends="get.weblogic.password"
    	description="Prepare it to deploy in the application server">
        <echo message="Deploying ${pimservice.war.path}."/>
        <basename property="appnamepimservice" file="${portal.home}/${pimservice.war.name}"
          suffix=".war"/>
		<install-app app-name="${appnamepimservice}" file-name="${pimservice.war.name}"/>
    </target>

    <target name="undeployPortal">
        <echo message="Undeploying generic portal"/>
      <basename property="appnamegenericportal" file="${portal.home}/${genericportal.ear.name}"
          suffix=".ear"/>
			<uninstall-app app-name="${appnamegenericportal}" />
        <echo message="Undeploying pim "/>
    </target>
	
	<target name="undeployPortalWithPIM">
        <echo message="Undeploying generic portal"/>
      <basename property="appnamegenericportal" file="${portal.home}/${genericportal.ear.name}"
          suffix=".ear"/>
			<uninstall-app app-name="${appnamegenericportal}" />
        <echo message="Undeploying pim "/>
       <basename property="appnamepimservice" file="${portal.home}/${pimservice.war.name}"
          suffix=".war"/>
		<uninstall-app app-name="${appnamepimservice}" />
    </target>
	
	<target name="prepare_bpr">
        <echo message="Preparing ${bpr_email.name}."/>
        <zip destfile="${bpr_email.path}"  update="true">
            <zipfileset dir="${email.templates.dir}" includes="*.xsl"
                        prefix="resources/SolutionsEmailService/xsl/"/>
            <zipfileset dir="${email.config.dir}" includes="emailConfig.xml"
                        prefix="${bpr.wsdl}/emailConfigParameters/"/>			
			<zipfileset dir="${email.config.dir}" includes="catalog.xml"
                        prefix="META-INF/"/>
        </zip>
		<echo message="Preparing ${bpr_generic_portal.name}."/>
        <zip destfile="${bpr_generic_portal.path}"  update="true">
			<zipfileset dir="${workflow.config.path}" includes="configuration.xml"
                        prefix="${bpr_generic_portal.wsdl}/config/"/>				
        </zip>
	</target>

	<target name="extract_bpr">
		<!-- Unzip ear to temporary location -->
		<unzip src="${bpr_email.path}" dest="${bpr_email.tmpdir}">
		</unzip>
	</target>
	
		<target if="avos_to_be_deployed" name="upsert_URN_mapping">

        <path id="activevos.urn.mapping.manegement.classpath">
            <fileset dir="${sip.home}/lib">
                <include name="axis-1.3.jar" />
                <include name="jaxrpc.jar" />
                <include name="wsdl4j-1.5.1.jar" />
                <include name="commons-discovery-0.2.jar" />
                <include name="commons-logging-1.1.1.jar" />
                <include name="build-active-vos.jar" />
            </fileset>
        </path>

        <taskdef resource="build-active-vos-taskdef.properties"
                 classpathref="activevos.urn.mapping.manegement.classpath"/>
		
			<upsertActiveVOSURNMapping wsdlUrl="${hubprop.activevos.mdm.urn.mapping.url}?wsdl" url="${hubprop.sip.appserver.web.url}/cmx/cs/" username="${env.avosUsername}" password="${env.avosPassword}"
                                   urn="urn:mdmcsrest:service" tenantContextId="$public"/>
		<upsertActiveVOSURNMapping wsdlUrl="${hubprop.activevos.mdm.urn.mapping.url}?wsdl" url="${hubprop.sip.appserver.web.url}/cmx/user/" username="${env.avosUsername}" password="${env.avosPassword}"
                                   urn="urn:mdmuserrest:service" tenantContextId="$public"/>
		<upsertActiveVOSURNMapping wsdlUrl="${hubprop.activevos.mdm.urn.mapping.url}?wsdl" url="${hubprop.sip.appserver.web.url}/" username="${env.avosUsername}" password="${env.avosPassword}"
                                   urn="urn:portal:service:url" tenantContextId="$public"/>
		<upsertActiveVOSURNMapping wsdlUrl="${hubprop.activevos.mdm.urn.mapping.url}?wsdl" url="${env.urnHubAdminUserUrl}" username="${env.avosUsername}" password="${env.avosPassword}"
                                   urn="urn:hub:admin:user" tenantContextId="$public"/>
		<upsertActiveVOSURNMapping wsdlUrl="${hubprop.activevos.mdm.urn.mapping.url}?wsdl" url="${env.forgotPasswordUrl}" username="${env.avosUsername}" password="${env.avosPassword}"
                                   urn="urn:forgot:password:url" tenantContextId="$public"/>
		<upsertActiveVOSURNMapping wsdlUrl="${hubprop.activevos.mdm.urn.mapping.url}?wsdl" url="${env.urnWithPortal}" username="${env.avosUsername}" password="${env.avosPassword}"
                                   urn="urn:withPortal" tenantContextId="$public"/>
		<upsertActiveVOSURNMapping wsdlUrl="${hubprop.activevos.mdm.urn.mapping.url}?wsdl" url="${env.urnWithPim}" username="${env.avosUsername}" password="${env.avosPassword}"
                                   urn="urn:withPim" tenantContextId="$public"/>
		<if>
			<equals arg1="${withPim}" arg2="yes" />
			<then>
			<upsertActiveVOSURNMapping wsdlUrl="${hubprop.activevos.mdm.urn.mapping.url}?wsdl" url="${env.urnPimAdminUser}" username="${env.avosUsername}" password="${env.avosPassword}"
                                   urn="urn:pim:admin:user" tenantContextId="$public"/>

			<upsertActiveVOSURNMapping wsdlUrl="${hubprop.activevos.mdm.urn.mapping.url}?wsdl" url="${env.urnPIMUrl}" username="${env.avosUsername}" password="${env.avosPassword}"
                                   urn="urn:pim:server:url" tenantContextId="$public"/>
			</then>
		</if>

		</target>
	
	
	<!--depends="setJndiHubserverHome"-->
	<target name="undeploy" >
        <echo message="Undeploying generic portal"/>
      <basename property="appnamegenericportal" file="${portal.home}/${genericportal.ear.name}"
          suffix=".ear"/>
		<uninstall-app app-name="${appnamegenericportal}" />
    
        <echo message="Undeploying pim"/>
       <basename property="appnamepimservice" file="${portal.home}/${pimservice.war.name}"
          suffix=".war"/>
		<uninstall-app app-name="${appnamepimservice}" />
    </target>
	
	
	
	<macrodef name="uninstall-app">
        <attribute name="app-name"/>
        <sequential>
            <taskdef name="wldeploy" classname="weblogic.ant.taskdefs.management.WLDeploy"
                     classpath="${env.WL_HOME}/server/lib/weblogic.jar"/>
            <wldeploy action="undeploy"
                      name="@{app-name}"
                      user="${hubprop.weblogic.username}" password="${env.wl_password}" verbose="true"
                      adminurl="${hubprop.weblogic.naming.protocol}://${hubprop.weblogic.host}:${hubprop.weblogic.rmi.port}"
                      debug="false" targets="${hubprop.weblogic.server}" failonerror="false">
            </wldeploy>
        </sequential>
    </macrodef>
	
	<macrodef name="install-app">
        <attribute name="file-name"/>
        <attribute name="app-name"/>
        <attribute name="ear-path" default="${portal.home}/@{file-name}"/>
        <sequential>
            <echo message="Installing @{file-name} to WebLogic."/>
            <taskdef name="wldeploy" classname="weblogic.ant.taskdefs.management.WLDeploy"
                     classpath="${env.WL_HOME}/server/lib/weblogic.jar"/>

            <wldeploy action="deploy"
                      source="@{ear-path}" name="@{app-name}"
                      user="${hubprop.weblogic.username}" password="${env.wl_password}" verbose="true"
                      adminurl="${hubprop.weblogic.naming.protocol}://${hubprop.weblogic.host}:${hubprop.weblogic.rmi.port}"
                      debug="false" targets="${hubprop.weblogic.server}"
                      upload="true" stage="true">
            </wldeploy>
        </sequential>
    </macrodef>
	
	<target name="create_templates">
		<if>
            <available file="${email.config.dir}" type="dir"/>  
            <then>  
				<echo message="email config directory already exists"/>
            </then>  
            <else>  
				<echo message="creating email templates directory"/>
				<mkdir dir="${email.templates.dir}"/> 
			</else>  
        </if> 
		<copy todir="${email.templates.dir}">
			<fileset dir="${email.xsl.path}"/>
		</copy>
		<java classname="com.informatica.mdm.solutions.EmailConfigMain"  failonerror="true">
           <arg value="${env.HUB_HOME}"/>
		   <arg value="${portal.home}"/>
           <classpath>
                <pathelement location="${portal.home}/email-config-util.jar"/>
            </classpath>
       </java>
	</target>

	<target name="deploy_bpm" if="avos_to_be_deployed" depends="upsert_URN_mapping,create_templates,prepare_bpr">

        <path id="activevos.classpath">
            <fileset dir="${hubprop.sip.home}/lib">
                <include name="axis-1.3.jar" />
                <include name="jaxrpc.jar" />
                <include name="wsdl4j-1.5.1.jar" />
                <include name="commons-discovery-0.2.jar" />
                <include name="commons-logging-1.1.1.jar" />
                <include name="bpr_tasks-9.2.4.1.jar" />
            </fileset>
        </path>

        <taskdef name="deploybpr" classname="com.activee.ant.bpr.tasks.AeDeployBPRTask"
                 classpathref="activevos.classpath"/>

        <echo message="Deploying portal Business Process Archives."/>
		
		<deploybpr type="webservice" file="${bpr_generic_portal.path}"
                   failonerror="true" username="${env.avosUsername}" password="${env.avosPassword}" tourl="${hubprop.activevos.deploy.url}" />

        <deploybpr type="webservice" file="${bpr_email.path}"
                   failonerror="true" username="${env.avosUsername}" password="${env.avosPassword}" tourl="${hubprop.activevos.deploy.url}" />
				   

    </target>

	
	
</project>